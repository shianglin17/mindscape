services:
  # PHP 後端服務
  backend:
    container_name: mindscape-backend  # 指定容器名稱
    build:
      context: .              # 構建上下文（當前目錄）
      dockerfile: .docker/php/Dockerfile  # PHP 鏡像的構建文件
    volumes:
      - ./backend:/var/www/html  # 掛載本地程式碼到容器，實現即時更新
    networks:
      - mindscape-network     # 加入自定義網路，實現容器間通信
    environment:
      DB_CONNECTION: mysql      # 指定使用 MySQL
      DB_HOST: mysql           # 使用服務名稱作為主機名
      DB_PORT: 3306
      DB_DATABASE: mindscape
      DB_USERNAME: mindscape
      DB_PASSWORD: secret

  # Nginx Web 服務器
  nginx:
    container_name: mindscape-nginx    # 指定容器名稱
    image: nginx:alpine      # 使用官方 Alpine 版本的 Nginx 鏡像（體積小）
    ports:
      - "8000:80"           # 端口映射：主機端口:容器端口
    volumes:
      - ./backend:/var/www/html                              # 掛載後端程式碼
      - .docker/nginx/default.conf:/etc/nginx/conf.d/default.conf  # 掛載 Nginx 配置
    depends_on:
      - backend             # 確保 backend 服務先啟動
    networks:
      - mindscape-network   # 加入同一網路以便與 PHP 通信

  # MySQL 資料庫服務
  mysql:
    image: mysql:8.0        # 使用 MySQL 8.0 版本
    environment:            # 設置環境變數
      MYSQL_DATABASE: mindscape        # 資料庫名稱
      MYSQL_ROOT_PASSWORD: root        # root 密碼
      MYSQL_USER: mindscape           # 創建的用戶
      MYSQL_PASSWORD: secret          # 用戶密碼
    volumes:
      - .docker/mysql/data:/var/lib/mysql  # 資料庫持久化存儲
    networks:
      - mindscape-network

  # 前端開發服務
  frontend:
    container_name: mindscape-frontend # 指定容器名稱
    build:
      context: .
      dockerfile: .docker/node/Dockerfile  # Node.js 環境構建文件
    volumes:
      - ./frontend:/app     # 掛載前端程式碼，支持熱重載
    ports:
      - "5173:5173"        # Vite 開發服務器端口
    command: sh -c "npm install && npm run dev"  # 容器啟動時執行的命令
    networks:
      - mindscape-network
    environment:
      - VITE_HOST=0.0.0.0    # 允許外部訪問
    tty: true                 # 保持終端開啟

# 網路配置
networks:
  mindscape-network:    # 自定義網路名稱
    driver: bridge      # 使用 bridge 驅動，允許容器間通信 